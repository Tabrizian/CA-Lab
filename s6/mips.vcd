$date
  Sat Jun 25 19:40:57 2016
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! clk $end
$var reg 4 " alu_opcode[3:0] $end
$var reg 4 # opcode[3:0] $end
$var reg 1 $ branch $end
$var reg 1 % reg_dest $end
$var reg 1 & reg_write $end
$var reg 1 ' alu_src $end
$var reg 1 ( mem_write $end
$var reg 1 ) mem_reg $end
$var reg 1 * mem_read $end
$var reg 1 + pc_src $end
$var reg 1 , jump $end
$scope module controller_instance $end
$var reg 4 - op_code[3:0] $end
$var reg 1 . clk $end
$var reg 4 / aluop[3:0] $end
$var reg 1 0 regdst $end
$var reg 1 1 regwrite $end
$var reg 1 2 alusrc $end
$var reg 1 3 memwrite $end
$var reg 1 4 memtoreg $end
$var reg 1 5 memread $end
$var reg 1 6 branch $end
$var reg 1 7 jump $end
$upscope $end
$scope module datapath_instance $end
$var reg 4 8 alu_opcode[3:0] $end
$var reg 1 9 branch $end
$var reg 1 : reg_dest $end
$var reg 1 ; reg_write $end
$var reg 1 < alu_src $end
$var reg 1 = mem_write $end
$var reg 1 > mem_reg $end
$var reg 1 ? mem_read $end
$var reg 1 @ pc_src $end
$var reg 1 A clk $end
$var reg 4 B opcode[3:0] $end
$var reg 1 C jump $end
$var reg 16 D pc_signal[15:0] $end
$var reg 16 E instruction[15:0] $end
$var reg 16 F data_memory_readdata[15:0] $end
$var reg 16 G alu_operand_1[15:0] $end
$var reg 16 H alu_operand_2[15:0] $end
$var reg 16 I alu_out[15:0] $end
$var reg 4 J rs1[3:0] $end
$var reg 4 K rs2[3:0] $end
$var reg 4 L load_address[3:0] $end
$var reg 16 M mux_3[15:0] $end
$var reg 4 N instruction_p1[15:12] $end
$var reg 4 O instruction_p2[11:8] $end
$var reg 4 P instruction_p3[7:4] $end
$var reg 4 Q instruction_p4[3:0] $end
$var reg 8 R instruction_p3_p4[7:0] $end
$var reg 16 S extended[15:0] $end
$var reg 16 T a_register_file[15:0] $end
$var reg 16 U b_register_file[15:0] $end
$var reg 16 V pc_plus_4[15:0] $end
$var integer 32 W pc_plus_4_tmp $end
$var reg 16 X shifted_extended[15:0] $end
$var reg 16 Y extended_plus_pc[15:0] $end
$var integer 32 Z extended_plus_pc_tmp $end
$var reg 16 [ pc_in[15:0] $end
$scope module instruction_mem $end
$var reg 1 \ clk $end
$var reg 16 ] address[15:0] $end
$var reg 16 ^ data_out[15:0] $end
$comment data_array is not handled $end
$upscope $end
$scope module data_mem $end
$var reg 1 _ clk $end
$var reg 16 ` address[15:0] $end
$var reg 16 a data_in[15:0] $end
$var reg 16 b read_data[15:0] $end
$var reg 1 c mem_write $end
$var reg 1 d mem_read $end
$comment data_array is not handled $end
$upscope $end
$scope module alu_instance $end
$var reg 4 e command[3:0] $end
$var reg 16 f a[15:0] $end
$var reg 16 g b[15:0] $end
$var reg 16 h res[15:0] $end
$var reg 16 i sums[15:0] $end
$var reg 16 j sub[15:0] $end
$var reg 16 k xors[15:0] $end
$var reg 16 l xnors[15:0] $end
$var reg 16 m ors[15:0] $end
$var reg 16 n ands[15:0] $end
$var reg 16 o multiplies[15:0] $end
$var reg 16 p dividers[15:0] $end
$var reg 16 q shrs[15:0] $end
$var reg 16 r shls[15:0] $end
$var reg 1 s command_in $end
$var reg 1 t cout $end
$scope module and_er $end
$var reg 16 u a[15:0] $end
$var reg 16 v b[15:0] $end
$var reg 16 w ands[15:0] $end
$upscope $end
$scope module or_er $end
$var reg 16 x a[15:0] $end
$var reg 16 y b[15:0] $end
$var reg 16 z ors[15:0] $end
$upscope $end
$scope module xor_er $end
$var reg 16 { a[15:0] $end
$var reg 16 | b[15:0] $end
$var reg 16 } xors[15:0] $end
$upscope $end
$scope module xnor_er $end
$var reg 16 !" a[15:0] $end
$var reg 16 "" b[15:0] $end
$var reg 16 #" xnors[15:0] $end
$upscope $end
$scope module shr_er $end
$var reg 16 $" a[15:0] $end
$var reg 1 %" data_in $end
$var reg 16 &" result[15:0] $end
$upscope $end
$scope module shl_er $end
$var reg 16 '" a[15:0] $end
$var reg 1 (" data_in $end
$var reg 16 )" result[15:0] $end
$upscope $end
$scope module multipl_er $end
$var reg 16 *" a[15:0] $end
$var reg 16 +" b[15:0] $end
$var reg 16 ," res[15:0] $end
$var reg 16 -" s1[15:0] $end
$var reg 16 ." s2[15:0] $end
$var reg 16 /" s3[15:0] $end
$var reg 16 0" s4[15:0] $end
$var reg 16 1" mid1[15:0] $end
$var reg 16 2" mid2[15:0] $end
$var reg 1 3" cout1 $end
$var reg 1 4" cout2 $end
$var reg 1 5" cout3 $end
$var reg 1 6" command $end
$scope module am1 $end
$var reg 4 7" a[3:0] $end
$var reg 4 8" b[3:0] $end
$var reg 8 9" ans[7:0] $end
$var reg 1 :" aha1 $end
$var reg 1 ;" bha1 $end
$var reg 1 <" cha1 $end
$var reg 1 =" aha2 $end
$var reg 1 >" bha2 $end
$var reg 1 ?" cha2 $end
$var reg 1 @" aha3 $end
$var reg 1 A" bha3 $end
$var reg 1 B" cha3 $end
$var reg 1 C" aha4 $end
$var reg 1 D" bha4 $end
$var reg 1 E" cha4 $end
$var reg 1 F" afa2 $end
$var reg 1 G" bfa2 $end
$var reg 1 H" cfa2 $end
$var reg 1 I" sfa2 $end
$var reg 1 J" afa3 $end
$var reg 1 K" bfa3 $end
$var reg 1 L" cfa3 $end
$var reg 1 M" sfa3 $end
$var reg 1 N" afa31 $end
$var reg 1 O" bfa31 $end
$var reg 1 P" cfa31 $end
$var reg 1 Q" sfa31 $end
$var reg 1 R" afa4 $end
$var reg 1 S" bfa4 $end
$var reg 1 T" cfa4 $end
$var reg 1 U" sfa4 $end
$var reg 1 V" afa5 $end
$var reg 1 W" bfa5 $end
$var reg 1 X" cfa5 $end
$var reg 1 Y" sfa5 $end
$var reg 1 Z" afa51 $end
$var reg 1 [" bfa51 $end
$var reg 1 \" cfa51 $end
$var reg 1 ]" sfa51 $end
$var reg 1 ^" afa6 $end
$var reg 1 _" bfa6 $end
$var reg 1 `" cfa6 $end
$var reg 1 a" sfa6 $end
$var reg 1 b" afa41 $end
$var reg 1 c" bfa41 $end
$var reg 1 d" cfa41 $end
$var reg 1 e" sfa41 $end
$scope module ha1 $end
$var reg 1 f" a $end
$var reg 1 g" b $end
$var reg 1 h" sum $end
$var reg 1 i" cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 j" a $end
$var reg 1 k" b $end
$var reg 1 l" cin $end
$var reg 1 m" sum $end
$var reg 1 n" cout $end
$var reg 1 o" s1 $end
$var reg 1 p" c1 $end
$var reg 1 q" c2 $end
$scope module ha1 $end
$var reg 1 r" a $end
$var reg 1 s" b $end
$var reg 1 t" sum $end
$var reg 1 u" cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 v" a $end
$var reg 1 w" b $end
$var reg 1 x" sum $end
$var reg 1 y" cout $end
$upscope $end
$upscope $end
$scope module ha2 $end
$var reg 1 z" a $end
$var reg 1 {" b $end
$var reg 1 |" sum $end
$var reg 1 }" cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 !# a $end
$var reg 1 "# b $end
$var reg 1 ## cin $end
$var reg 1 $# sum $end
$var reg 1 %# cout $end
$var reg 1 &# s1 $end
$var reg 1 '# c1 $end
$var reg 1 (# c2 $end
$scope module ha1 $end
$var reg 1 )# a $end
$var reg 1 *# b $end
$var reg 1 +# sum $end
$var reg 1 ,# cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 -# a $end
$var reg 1 .# b $end
$var reg 1 /# sum $end
$var reg 1 0# cout $end
$upscope $end
$upscope $end
$scope module fa31 $end
$var reg 1 1# a $end
$var reg 1 2# b $end
$var reg 1 3# cin $end
$var reg 1 4# sum $end
$var reg 1 5# cout $end
$var reg 1 6# s1 $end
$var reg 1 7# c1 $end
$var reg 1 8# c2 $end
$scope module ha1 $end
$var reg 1 9# a $end
$var reg 1 :# b $end
$var reg 1 ;# sum $end
$var reg 1 <# cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 =# a $end
$var reg 1 ># b $end
$var reg 1 ?# sum $end
$var reg 1 @# cout $end
$upscope $end
$upscope $end
$scope module ha3 $end
$var reg 1 A# a $end
$var reg 1 B# b $end
$var reg 1 C# sum $end
$var reg 1 D# cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 E# a $end
$var reg 1 F# b $end
$var reg 1 G# cin $end
$var reg 1 H# sum $end
$var reg 1 I# cout $end
$var reg 1 J# s1 $end
$var reg 1 K# c1 $end
$var reg 1 L# c2 $end
$scope module ha1 $end
$var reg 1 M# a $end
$var reg 1 N# b $end
$var reg 1 O# sum $end
$var reg 1 P# cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 Q# a $end
$var reg 1 R# b $end
$var reg 1 S# sum $end
$var reg 1 T# cout $end
$upscope $end
$upscope $end
$scope module fa41 $end
$var reg 1 U# a $end
$var reg 1 V# b $end
$var reg 1 W# cin $end
$var reg 1 X# sum $end
$var reg 1 Y# cout $end
$var reg 1 Z# s1 $end
$var reg 1 [# c1 $end
$var reg 1 \# c2 $end
$scope module ha1 $end
$var reg 1 ]# a $end
$var reg 1 ^# b $end
$var reg 1 _# sum $end
$var reg 1 `# cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 a# a $end
$var reg 1 b# b $end
$var reg 1 c# sum $end
$var reg 1 d# cout $end
$upscope $end
$upscope $end
$scope module ha4 $end
$var reg 1 e# a $end
$var reg 1 f# b $end
$var reg 1 g# sum $end
$var reg 1 h# cout $end
$upscope $end
$scope module fa5 $end
$var reg 1 i# a $end
$var reg 1 j# b $end
$var reg 1 k# cin $end
$var reg 1 l# sum $end
$var reg 1 m# cout $end
$var reg 1 n# s1 $end
$var reg 1 o# c1 $end
$var reg 1 p# c2 $end
$scope module ha1 $end
$var reg 1 q# a $end
$var reg 1 r# b $end
$var reg 1 s# sum $end
$var reg 1 t# cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 u# a $end
$var reg 1 v# b $end
$var reg 1 w# sum $end
$var reg 1 x# cout $end
$upscope $end
$upscope $end
$scope module fa51 $end
$var reg 1 y# a $end
$var reg 1 z# b $end
$var reg 1 {# cin $end
$var reg 1 |# sum $end
$var reg 1 }# cout $end
$var reg 1 !$ s1 $end
$var reg 1 "$ c1 $end
$var reg 1 #$ c2 $end
$scope module ha1 $end
$var reg 1 $$ a $end
$var reg 1 %$ b $end
$var reg 1 &$ sum $end
$var reg 1 '$ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 ($ a $end
$var reg 1 )$ b $end
$var reg 1 *$ sum $end
$var reg 1 +$ cout $end
$upscope $end
$upscope $end
$scope module fa6 $end
$var reg 1 ,$ a $end
$var reg 1 -$ b $end
$var reg 1 .$ cin $end
$var reg 1 /$ sum $end
$var reg 1 0$ cout $end
$var reg 1 1$ s1 $end
$var reg 1 2$ c1 $end
$var reg 1 3$ c2 $end
$scope module ha1 $end
$var reg 1 4$ a $end
$var reg 1 5$ b $end
$var reg 1 6$ sum $end
$var reg 1 7$ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 8$ a $end
$var reg 1 9$ b $end
$var reg 1 :$ sum $end
$var reg 1 ;$ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module am2 $end
$var reg 4 <$ a[3:0] $end
$var reg 4 =$ b[3:0] $end
$var reg 8 >$ ans[7:0] $end
$var reg 1 ?$ aha1 $end
$var reg 1 @$ bha1 $end
$var reg 1 A$ cha1 $end
$var reg 1 B$ aha2 $end
$var reg 1 C$ bha2 $end
$var reg 1 D$ cha2 $end
$var reg 1 E$ aha3 $end
$var reg 1 F$ bha3 $end
$var reg 1 G$ cha3 $end
$var reg 1 H$ aha4 $end
$var reg 1 I$ bha4 $end
$var reg 1 J$ cha4 $end
$var reg 1 K$ afa2 $end
$var reg 1 L$ bfa2 $end
$var reg 1 M$ cfa2 $end
$var reg 1 N$ sfa2 $end
$var reg 1 O$ afa3 $end
$var reg 1 P$ bfa3 $end
$var reg 1 Q$ cfa3 $end
$var reg 1 R$ sfa3 $end
$var reg 1 S$ afa31 $end
$var reg 1 T$ bfa31 $end
$var reg 1 U$ cfa31 $end
$var reg 1 V$ sfa31 $end
$var reg 1 W$ afa4 $end
$var reg 1 X$ bfa4 $end
$var reg 1 Y$ cfa4 $end
$var reg 1 Z$ sfa4 $end
$var reg 1 [$ afa5 $end
$var reg 1 \$ bfa5 $end
$var reg 1 ]$ cfa5 $end
$var reg 1 ^$ sfa5 $end
$var reg 1 _$ afa51 $end
$var reg 1 `$ bfa51 $end
$var reg 1 a$ cfa51 $end
$var reg 1 b$ sfa51 $end
$var reg 1 c$ afa6 $end
$var reg 1 d$ bfa6 $end
$var reg 1 e$ cfa6 $end
$var reg 1 f$ sfa6 $end
$var reg 1 g$ afa41 $end
$var reg 1 h$ bfa41 $end
$var reg 1 i$ cfa41 $end
$var reg 1 j$ sfa41 $end
$scope module ha1 $end
$var reg 1 k$ a $end
$var reg 1 l$ b $end
$var reg 1 m$ sum $end
$var reg 1 n$ cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 o$ a $end
$var reg 1 p$ b $end
$var reg 1 q$ cin $end
$var reg 1 r$ sum $end
$var reg 1 s$ cout $end
$var reg 1 t$ s1 $end
$var reg 1 u$ c1 $end
$var reg 1 v$ c2 $end
$scope module ha1 $end
$var reg 1 w$ a $end
$var reg 1 x$ b $end
$var reg 1 y$ sum $end
$var reg 1 z$ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 {$ a $end
$var reg 1 |$ b $end
$var reg 1 }$ sum $end
$var reg 1 !% cout $end
$upscope $end
$upscope $end
$scope module ha2 $end
$var reg 1 "% a $end
$var reg 1 #% b $end
$var reg 1 $% sum $end
$var reg 1 %% cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 &% a $end
$var reg 1 '% b $end
$var reg 1 (% cin $end
$var reg 1 )% sum $end
$var reg 1 *% cout $end
$var reg 1 +% s1 $end
$var reg 1 ,% c1 $end
$var reg 1 -% c2 $end
$scope module ha1 $end
$var reg 1 .% a $end
$var reg 1 /% b $end
$var reg 1 0% sum $end
$var reg 1 1% cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 2% a $end
$var reg 1 3% b $end
$var reg 1 4% sum $end
$var reg 1 5% cout $end
$upscope $end
$upscope $end
$scope module fa31 $end
$var reg 1 6% a $end
$var reg 1 7% b $end
$var reg 1 8% cin $end
$var reg 1 9% sum $end
$var reg 1 :% cout $end
$var reg 1 ;% s1 $end
$var reg 1 <% c1 $end
$var reg 1 =% c2 $end
$scope module ha1 $end
$var reg 1 >% a $end
$var reg 1 ?% b $end
$var reg 1 @% sum $end
$var reg 1 A% cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 B% a $end
$var reg 1 C% b $end
$var reg 1 D% sum $end
$var reg 1 E% cout $end
$upscope $end
$upscope $end
$scope module ha3 $end
$var reg 1 F% a $end
$var reg 1 G% b $end
$var reg 1 H% sum $end
$var reg 1 I% cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 J% a $end
$var reg 1 K% b $end
$var reg 1 L% cin $end
$var reg 1 M% sum $end
$var reg 1 N% cout $end
$var reg 1 O% s1 $end
$var reg 1 P% c1 $end
$var reg 1 Q% c2 $end
$scope module ha1 $end
$var reg 1 R% a $end
$var reg 1 S% b $end
$var reg 1 T% sum $end
$var reg 1 U% cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 V% a $end
$var reg 1 W% b $end
$var reg 1 X% sum $end
$var reg 1 Y% cout $end
$upscope $end
$upscope $end
$scope module fa41 $end
$var reg 1 Z% a $end
$var reg 1 [% b $end
$var reg 1 \% cin $end
$var reg 1 ]% sum $end
$var reg 1 ^% cout $end
$var reg 1 _% s1 $end
$var reg 1 `% c1 $end
$var reg 1 a% c2 $end
$scope module ha1 $end
$var reg 1 b% a $end
$var reg 1 c% b $end
$var reg 1 d% sum $end
$var reg 1 e% cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 f% a $end
$var reg 1 g% b $end
$var reg 1 h% sum $end
$var reg 1 i% cout $end
$upscope $end
$upscope $end
$scope module ha4 $end
$var reg 1 j% a $end
$var reg 1 k% b $end
$var reg 1 l% sum $end
$var reg 1 m% cout $end
$upscope $end
$scope module fa5 $end
$var reg 1 n% a $end
$var reg 1 o% b $end
$var reg 1 p% cin $end
$var reg 1 q% sum $end
$var reg 1 r% cout $end
$var reg 1 s% s1 $end
$var reg 1 t% c1 $end
$var reg 1 u% c2 $end
$scope module ha1 $end
$var reg 1 v% a $end
$var reg 1 w% b $end
$var reg 1 x% sum $end
$var reg 1 y% cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 z% a $end
$var reg 1 {% b $end
$var reg 1 |% sum $end
$var reg 1 }% cout $end
$upscope $end
$upscope $end
$scope module fa51 $end
$var reg 1 !& a $end
$var reg 1 "& b $end
$var reg 1 #& cin $end
$var reg 1 $& sum $end
$var reg 1 %& cout $end
$var reg 1 && s1 $end
$var reg 1 '& c1 $end
$var reg 1 (& c2 $end
$scope module ha1 $end
$var reg 1 )& a $end
$var reg 1 *& b $end
$var reg 1 +& sum $end
$var reg 1 ,& cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 -& a $end
$var reg 1 .& b $end
$var reg 1 /& sum $end
$var reg 1 0& cout $end
$upscope $end
$upscope $end
$scope module fa6 $end
$var reg 1 1& a $end
$var reg 1 2& b $end
$var reg 1 3& cin $end
$var reg 1 4& sum $end
$var reg 1 5& cout $end
$var reg 1 6& s1 $end
$var reg 1 7& c1 $end
$var reg 1 8& c2 $end
$scope module ha1 $end
$var reg 1 9& a $end
$var reg 1 :& b $end
$var reg 1 ;& sum $end
$var reg 1 <& cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 =& a $end
$var reg 1 >& b $end
$var reg 1 ?& sum $end
$var reg 1 @& cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module am3 $end
$var reg 4 A& a[3:0] $end
$var reg 4 B& b[3:0] $end
$var reg 8 C& ans[7:0] $end
$var reg 1 D& aha1 $end
$var reg 1 E& bha1 $end
$var reg 1 F& cha1 $end
$var reg 1 G& aha2 $end
$var reg 1 H& bha2 $end
$var reg 1 I& cha2 $end
$var reg 1 J& aha3 $end
$var reg 1 K& bha3 $end
$var reg 1 L& cha3 $end
$var reg 1 M& aha4 $end
$var reg 1 N& bha4 $end
$var reg 1 O& cha4 $end
$var reg 1 P& afa2 $end
$var reg 1 Q& bfa2 $end
$var reg 1 R& cfa2 $end
$var reg 1 S& sfa2 $end
$var reg 1 T& afa3 $end
$var reg 1 U& bfa3 $end
$var reg 1 V& cfa3 $end
$var reg 1 W& sfa3 $end
$var reg 1 X& afa31 $end
$var reg 1 Y& bfa31 $end
$var reg 1 Z& cfa31 $end
$var reg 1 [& sfa31 $end
$var reg 1 \& afa4 $end
$var reg 1 ]& bfa4 $end
$var reg 1 ^& cfa4 $end
$var reg 1 _& sfa4 $end
$var reg 1 `& afa5 $end
$var reg 1 a& bfa5 $end
$var reg 1 b& cfa5 $end
$var reg 1 c& sfa5 $end
$var reg 1 d& afa51 $end
$var reg 1 e& bfa51 $end
$var reg 1 f& cfa51 $end
$var reg 1 g& sfa51 $end
$var reg 1 h& afa6 $end
$var reg 1 i& bfa6 $end
$var reg 1 j& cfa6 $end
$var reg 1 k& sfa6 $end
$var reg 1 l& afa41 $end
$var reg 1 m& bfa41 $end
$var reg 1 n& cfa41 $end
$var reg 1 o& sfa41 $end
$scope module ha1 $end
$var reg 1 p& a $end
$var reg 1 q& b $end
$var reg 1 r& sum $end
$var reg 1 s& cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 t& a $end
$var reg 1 u& b $end
$var reg 1 v& cin $end
$var reg 1 w& sum $end
$var reg 1 x& cout $end
$var reg 1 y& s1 $end
$var reg 1 z& c1 $end
$var reg 1 {& c2 $end
$scope module ha1 $end
$var reg 1 |& a $end
$var reg 1 }& b $end
$var reg 1 !' sum $end
$var reg 1 "' cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 #' a $end
$var reg 1 $' b $end
$var reg 1 %' sum $end
$var reg 1 &' cout $end
$upscope $end
$upscope $end
$scope module ha2 $end
$var reg 1 '' a $end
$var reg 1 (' b $end
$var reg 1 )' sum $end
$var reg 1 *' cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 +' a $end
$var reg 1 ,' b $end
$var reg 1 -' cin $end
$var reg 1 .' sum $end
$var reg 1 /' cout $end
$var reg 1 0' s1 $end
$var reg 1 1' c1 $end
$var reg 1 2' c2 $end
$scope module ha1 $end
$var reg 1 3' a $end
$var reg 1 4' b $end
$var reg 1 5' sum $end
$var reg 1 6' cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 7' a $end
$var reg 1 8' b $end
$var reg 1 9' sum $end
$var reg 1 :' cout $end
$upscope $end
$upscope $end
$scope module fa31 $end
$var reg 1 ;' a $end
$var reg 1 <' b $end
$var reg 1 =' cin $end
$var reg 1 >' sum $end
$var reg 1 ?' cout $end
$var reg 1 @' s1 $end
$var reg 1 A' c1 $end
$var reg 1 B' c2 $end
$scope module ha1 $end
$var reg 1 C' a $end
$var reg 1 D' b $end
$var reg 1 E' sum $end
$var reg 1 F' cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 G' a $end
$var reg 1 H' b $end
$var reg 1 I' sum $end
$var reg 1 J' cout $end
$upscope $end
$upscope $end
$scope module ha3 $end
$var reg 1 K' a $end
$var reg 1 L' b $end
$var reg 1 M' sum $end
$var reg 1 N' cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 O' a $end
$var reg 1 P' b $end
$var reg 1 Q' cin $end
$var reg 1 R' sum $end
$var reg 1 S' cout $end
$var reg 1 T' s1 $end
$var reg 1 U' c1 $end
$var reg 1 V' c2 $end
$scope module ha1 $end
$var reg 1 W' a $end
$var reg 1 X' b $end
$var reg 1 Y' sum $end
$var reg 1 Z' cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 [' a $end
$var reg 1 \' b $end
$var reg 1 ]' sum $end
$var reg 1 ^' cout $end
$upscope $end
$upscope $end
$scope module fa41 $end
$var reg 1 _' a $end
$var reg 1 `' b $end
$var reg 1 a' cin $end
$var reg 1 b' sum $end
$var reg 1 c' cout $end
$var reg 1 d' s1 $end
$var reg 1 e' c1 $end
$var reg 1 f' c2 $end
$scope module ha1 $end
$var reg 1 g' a $end
$var reg 1 h' b $end
$var reg 1 i' sum $end
$var reg 1 j' cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 k' a $end
$var reg 1 l' b $end
$var reg 1 m' sum $end
$var reg 1 n' cout $end
$upscope $end
$upscope $end
$scope module ha4 $end
$var reg 1 o' a $end
$var reg 1 p' b $end
$var reg 1 q' sum $end
$var reg 1 r' cout $end
$upscope $end
$scope module fa5 $end
$var reg 1 s' a $end
$var reg 1 t' b $end
$var reg 1 u' cin $end
$var reg 1 v' sum $end
$var reg 1 w' cout $end
$var reg 1 x' s1 $end
$var reg 1 y' c1 $end
$var reg 1 z' c2 $end
$scope module ha1 $end
$var reg 1 {' a $end
$var reg 1 |' b $end
$var reg 1 }' sum $end
$var reg 1 !( cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 "( a $end
$var reg 1 #( b $end
$var reg 1 $( sum $end
$var reg 1 %( cout $end
$upscope $end
$upscope $end
$scope module fa51 $end
$var reg 1 &( a $end
$var reg 1 '( b $end
$var reg 1 (( cin $end
$var reg 1 )( sum $end
$var reg 1 *( cout $end
$var reg 1 +( s1 $end
$var reg 1 ,( c1 $end
$var reg 1 -( c2 $end
$scope module ha1 $end
$var reg 1 .( a $end
$var reg 1 /( b $end
$var reg 1 0( sum $end
$var reg 1 1( cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 2( a $end
$var reg 1 3( b $end
$var reg 1 4( sum $end
$var reg 1 5( cout $end
$upscope $end
$upscope $end
$scope module fa6 $end
$var reg 1 6( a $end
$var reg 1 7( b $end
$var reg 1 8( cin $end
$var reg 1 9( sum $end
$var reg 1 :( cout $end
$var reg 1 ;( s1 $end
$var reg 1 <( c1 $end
$var reg 1 =( c2 $end
$scope module ha1 $end
$var reg 1 >( a $end
$var reg 1 ?( b $end
$var reg 1 @( sum $end
$var reg 1 A( cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 B( a $end
$var reg 1 C( b $end
$var reg 1 D( sum $end
$var reg 1 E( cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module am4 $end
$var reg 4 F( a[3:0] $end
$var reg 4 G( b[3:0] $end
$var reg 8 H( ans[7:0] $end
$var reg 1 I( aha1 $end
$var reg 1 J( bha1 $end
$var reg 1 K( cha1 $end
$var reg 1 L( aha2 $end
$var reg 1 M( bha2 $end
$var reg 1 N( cha2 $end
$var reg 1 O( aha3 $end
$var reg 1 P( bha3 $end
$var reg 1 Q( cha3 $end
$var reg 1 R( aha4 $end
$var reg 1 S( bha4 $end
$var reg 1 T( cha4 $end
$var reg 1 U( afa2 $end
$var reg 1 V( bfa2 $end
$var reg 1 W( cfa2 $end
$var reg 1 X( sfa2 $end
$var reg 1 Y( afa3 $end
$var reg 1 Z( bfa3 $end
$var reg 1 [( cfa3 $end
$var reg 1 \( sfa3 $end
$var reg 1 ]( afa31 $end
$var reg 1 ^( bfa31 $end
$var reg 1 _( cfa31 $end
$var reg 1 `( sfa31 $end
$var reg 1 a( afa4 $end
$var reg 1 b( bfa4 $end
$var reg 1 c( cfa4 $end
$var reg 1 d( sfa4 $end
$var reg 1 e( afa5 $end
$var reg 1 f( bfa5 $end
$var reg 1 g( cfa5 $end
$var reg 1 h( sfa5 $end
$var reg 1 i( afa51 $end
$var reg 1 j( bfa51 $end
$var reg 1 k( cfa51 $end
$var reg 1 l( sfa51 $end
$var reg 1 m( afa6 $end
$var reg 1 n( bfa6 $end
$var reg 1 o( cfa6 $end
$var reg 1 p( sfa6 $end
$var reg 1 q( afa41 $end
$var reg 1 r( bfa41 $end
$var reg 1 s( cfa41 $end
$var reg 1 t( sfa41 $end
$scope module ha1 $end
$var reg 1 u( a $end
$var reg 1 v( b $end
$var reg 1 w( sum $end
$var reg 1 x( cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 y( a $end
$var reg 1 z( b $end
$var reg 1 {( cin $end
$var reg 1 |( sum $end
$var reg 1 }( cout $end
$var reg 1 !) s1 $end
$var reg 1 ") c1 $end
$var reg 1 #) c2 $end
$scope module ha1 $end
$var reg 1 $) a $end
$var reg 1 %) b $end
$var reg 1 &) sum $end
$var reg 1 ') cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 () a $end
$var reg 1 )) b $end
$var reg 1 *) sum $end
$var reg 1 +) cout $end
$upscope $end
$upscope $end
$scope module ha2 $end
$var reg 1 ,) a $end
$var reg 1 -) b $end
$var reg 1 .) sum $end
$var reg 1 /) cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 0) a $end
$var reg 1 1) b $end
$var reg 1 2) cin $end
$var reg 1 3) sum $end
$var reg 1 4) cout $end
$var reg 1 5) s1 $end
$var reg 1 6) c1 $end
$var reg 1 7) c2 $end
$scope module ha1 $end
$var reg 1 8) a $end
$var reg 1 9) b $end
$var reg 1 :) sum $end
$var reg 1 ;) cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 <) a $end
$var reg 1 =) b $end
$var reg 1 >) sum $end
$var reg 1 ?) cout $end
$upscope $end
$upscope $end
$scope module fa31 $end
$var reg 1 @) a $end
$var reg 1 A) b $end
$var reg 1 B) cin $end
$var reg 1 C) sum $end
$var reg 1 D) cout $end
$var reg 1 E) s1 $end
$var reg 1 F) c1 $end
$var reg 1 G) c2 $end
$scope module ha1 $end
$var reg 1 H) a $end
$var reg 1 I) b $end
$var reg 1 J) sum $end
$var reg 1 K) cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 L) a $end
$var reg 1 M) b $end
$var reg 1 N) sum $end
$var reg 1 O) cout $end
$upscope $end
$upscope $end
$scope module ha3 $end
$var reg 1 P) a $end
$var reg 1 Q) b $end
$var reg 1 R) sum $end
$var reg 1 S) cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 T) a $end
$var reg 1 U) b $end
$var reg 1 V) cin $end
$var reg 1 W) sum $end
$var reg 1 X) cout $end
$var reg 1 Y) s1 $end
$var reg 1 Z) c1 $end
$var reg 1 [) c2 $end
$scope module ha1 $end
$var reg 1 \) a $end
$var reg 1 ]) b $end
$var reg 1 ^) sum $end
$var reg 1 _) cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 `) a $end
$var reg 1 a) b $end
$var reg 1 b) sum $end
$var reg 1 c) cout $end
$upscope $end
$upscope $end
$scope module fa41 $end
$var reg 1 d) a $end
$var reg 1 e) b $end
$var reg 1 f) cin $end
$var reg 1 g) sum $end
$var reg 1 h) cout $end
$var reg 1 i) s1 $end
$var reg 1 j) c1 $end
$var reg 1 k) c2 $end
$scope module ha1 $end
$var reg 1 l) a $end
$var reg 1 m) b $end
$var reg 1 n) sum $end
$var reg 1 o) cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 p) a $end
$var reg 1 q) b $end
$var reg 1 r) sum $end
$var reg 1 s) cout $end
$upscope $end
$upscope $end
$scope module ha4 $end
$var reg 1 t) a $end
$var reg 1 u) b $end
$var reg 1 v) sum $end
$var reg 1 w) cout $end
$upscope $end
$scope module fa5 $end
$var reg 1 x) a $end
$var reg 1 y) b $end
$var reg 1 z) cin $end
$var reg 1 {) sum $end
$var reg 1 |) cout $end
$var reg 1 }) s1 $end
$var reg 1 !* c1 $end
$var reg 1 "* c2 $end
$scope module ha1 $end
$var reg 1 #* a $end
$var reg 1 $* b $end
$var reg 1 %* sum $end
$var reg 1 &* cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 '* a $end
$var reg 1 (* b $end
$var reg 1 )* sum $end
$var reg 1 ** cout $end
$upscope $end
$upscope $end
$scope module fa51 $end
$var reg 1 +* a $end
$var reg 1 ,* b $end
$var reg 1 -* cin $end
$var reg 1 .* sum $end
$var reg 1 /* cout $end
$var reg 1 0* s1 $end
$var reg 1 1* c1 $end
$var reg 1 2* c2 $end
$scope module ha1 $end
$var reg 1 3* a $end
$var reg 1 4* b $end
$var reg 1 5* sum $end
$var reg 1 6* cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 7* a $end
$var reg 1 8* b $end
$var reg 1 9* sum $end
$var reg 1 :* cout $end
$upscope $end
$upscope $end
$scope module fa6 $end
$var reg 1 ;* a $end
$var reg 1 <* b $end
$var reg 1 =* cin $end
$var reg 1 >* sum $end
$var reg 1 ?* cout $end
$var reg 1 @* s1 $end
$var reg 1 A* c1 $end
$var reg 1 B* c2 $end
$scope module ha1 $end
$var reg 1 C* a $end
$var reg 1 D* b $end
$var reg 1 E* sum $end
$var reg 1 F* cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 G* a $end
$var reg 1 H* b $end
$var reg 1 I* sum $end
$var reg 1 J* cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module sum1 $end
$var reg 16 K* a[15:0] $end
$var reg 16 L* b[15:0] $end
$var reg 16 M* sum[15:0] $end
$var reg 1 N* cout $end
$var reg 1 O* command $end
$var reg 16 P* cout_mid[15:0] $end
$var reg 16 Q* c[15:0] $end
$var reg 1 R* cin $end
$scope module fa1 $end
$var reg 1 S* a $end
$var reg 1 T* b $end
$var reg 1 U* cin $end
$var reg 1 V* sum $end
$var reg 1 W* cout $end
$var reg 1 X* s1 $end
$var reg 1 Y* c1 $end
$var reg 1 Z* c2 $end
$scope module ha1 $end
$var reg 1 [* a $end
$var reg 1 \* b $end
$var reg 1 ]* sum $end
$var reg 1 ^* cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 _* a $end
$var reg 1 `* b $end
$var reg 1 a* sum $end
$var reg 1 b* cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module fa $end
$var reg 1 c* a $end
$var reg 1 d* b $end
$var reg 1 e* cin $end
$var reg 1 f* sum $end
$var reg 1 g* cout $end
$var reg 1 h* s1 $end
$var reg 1 i* c1 $end
$var reg 1 j* c2 $end
$scope module ha1 $end
$var reg 1 k* a $end
$var reg 1 l* b $end
$var reg 1 m* sum $end
$var reg 1 n* cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 o* a $end
$var reg 1 p* b $end
$var reg 1 q* sum $end
$var reg 1 r* cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module fa $end
$var reg 1 s* a $end
$var reg 1 t* b $end
$var reg 1 u* cin $end
$var reg 1 v* sum $end
$var reg 1 w* cout $end
$var reg 1 x* s1 $end
$var reg 1 y* c1 $end
$var reg 1 z* c2 $end
$scope module ha1 $end
$var reg 1 {* a $end
$var reg 1 |* b $end
$var reg 1 }* sum $end
$var reg 1 !+ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 "+ a $end
$var reg 1 #+ b $end
$var reg 1 $+ sum $end
$var reg 1 %+ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module fa $end
$var reg 1 &+ a $end
$var reg 1 '+ b $end
$var reg 1 (+ cin $end
$var reg 1 )+ sum $end
$var reg 1 *+ cout $end
$var reg 1 ++ s1 $end
$var reg 1 ,+ c1 $end
$var reg 1 -+ c2 $end
$scope module ha1 $end
$var reg 1 .+ a $end
$var reg 1 /+ b $end
$var reg 1 0+ sum $end
$var reg 1 1+ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 2+ a $end
$var reg 1 3+ b $end
$var reg 1 4+ sum $end
$var reg 1 5+ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (4) $end
$scope module fa $end
$var reg 1 6+ a $end
$var reg 1 7+ b $end
$var reg 1 8+ cin $end
$var reg 1 9+ sum $end
$var reg 1 :+ cout $end
$var reg 1 ;+ s1 $end
$var reg 1 <+ c1 $end
$var reg 1 =+ c2 $end
$scope module ha1 $end
$var reg 1 >+ a $end
$var reg 1 ?+ b $end
$var reg 1 @+ sum $end
$var reg 1 A+ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 B+ a $end
$var reg 1 C+ b $end
$var reg 1 D+ sum $end
$var reg 1 E+ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (5) $end
$scope module fa $end
$var reg 1 F+ a $end
$var reg 1 G+ b $end
$var reg 1 H+ cin $end
$var reg 1 I+ sum $end
$var reg 1 J+ cout $end
$var reg 1 K+ s1 $end
$var reg 1 L+ c1 $end
$var reg 1 M+ c2 $end
$scope module ha1 $end
$var reg 1 N+ a $end
$var reg 1 O+ b $end
$var reg 1 P+ sum $end
$var reg 1 Q+ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 R+ a $end
$var reg 1 S+ b $end
$var reg 1 T+ sum $end
$var reg 1 U+ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (6) $end
$scope module fa $end
$var reg 1 V+ a $end
$var reg 1 W+ b $end
$var reg 1 X+ cin $end
$var reg 1 Y+ sum $end
$var reg 1 Z+ cout $end
$var reg 1 [+ s1 $end
$var reg 1 \+ c1 $end
$var reg 1 ]+ c2 $end
$scope module ha1 $end
$var reg 1 ^+ a $end
$var reg 1 _+ b $end
$var reg 1 `+ sum $end
$var reg 1 a+ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 b+ a $end
$var reg 1 c+ b $end
$var reg 1 d+ sum $end
$var reg 1 e+ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (7) $end
$scope module fa $end
$var reg 1 f+ a $end
$var reg 1 g+ b $end
$var reg 1 h+ cin $end
$var reg 1 i+ sum $end
$var reg 1 j+ cout $end
$var reg 1 k+ s1 $end
$var reg 1 l+ c1 $end
$var reg 1 m+ c2 $end
$scope module ha1 $end
$var reg 1 n+ a $end
$var reg 1 o+ b $end
$var reg 1 p+ sum $end
$var reg 1 q+ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 r+ a $end
$var reg 1 s+ b $end
$var reg 1 t+ sum $end
$var reg 1 u+ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (8) $end
$scope module fa $end
$var reg 1 v+ a $end
$var reg 1 w+ b $end
$var reg 1 x+ cin $end
$var reg 1 y+ sum $end
$var reg 1 z+ cout $end
$var reg 1 {+ s1 $end
$var reg 1 |+ c1 $end
$var reg 1 }+ c2 $end
$scope module ha1 $end
$var reg 1 !, a $end
$var reg 1 ", b $end
$var reg 1 #, sum $end
$var reg 1 $, cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 %, a $end
$var reg 1 &, b $end
$var reg 1 ', sum $end
$var reg 1 (, cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (9) $end
$scope module fa $end
$var reg 1 ), a $end
$var reg 1 *, b $end
$var reg 1 +, cin $end
$var reg 1 ,, sum $end
$var reg 1 -, cout $end
$var reg 1 ., s1 $end
$var reg 1 /, c1 $end
$var reg 1 0, c2 $end
$scope module ha1 $end
$var reg 1 1, a $end
$var reg 1 2, b $end
$var reg 1 3, sum $end
$var reg 1 4, cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 5, a $end
$var reg 1 6, b $end
$var reg 1 7, sum $end
$var reg 1 8, cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (10) $end
$scope module fa $end
$var reg 1 9, a $end
$var reg 1 :, b $end
$var reg 1 ;, cin $end
$var reg 1 <, sum $end
$var reg 1 =, cout $end
$var reg 1 >, s1 $end
$var reg 1 ?, c1 $end
$var reg 1 @, c2 $end
$scope module ha1 $end
$var reg 1 A, a $end
$var reg 1 B, b $end
$var reg 1 C, sum $end
$var reg 1 D, cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 E, a $end
$var reg 1 F, b $end
$var reg 1 G, sum $end
$var reg 1 H, cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (11) $end
$scope module fa $end
$var reg 1 I, a $end
$var reg 1 J, b $end
$var reg 1 K, cin $end
$var reg 1 L, sum $end
$var reg 1 M, cout $end
$var reg 1 N, s1 $end
$var reg 1 O, c1 $end
$var reg 1 P, c2 $end
$scope module ha1 $end
$var reg 1 Q, a $end
$var reg 1 R, b $end
$var reg 1 S, sum $end
$var reg 1 T, cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 U, a $end
$var reg 1 V, b $end
$var reg 1 W, sum $end
$var reg 1 X, cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (12) $end
$scope module fa $end
$var reg 1 Y, a $end
$var reg 1 Z, b $end
$var reg 1 [, cin $end
$var reg 1 \, sum $end
$var reg 1 ], cout $end
$var reg 1 ^, s1 $end
$var reg 1 _, c1 $end
$var reg 1 `, c2 $end
$scope module ha1 $end
$var reg 1 a, a $end
$var reg 1 b, b $end
$var reg 1 c, sum $end
$var reg 1 d, cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 e, a $end
$var reg 1 f, b $end
$var reg 1 g, sum $end
$var reg 1 h, cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (13) $end
$scope module fa $end
$var reg 1 i, a $end
$var reg 1 j, b $end
$var reg 1 k, cin $end
$var reg 1 l, sum $end
$var reg 1 m, cout $end
$var reg 1 n, s1 $end
$var reg 1 o, c1 $end
$var reg 1 p, c2 $end
$scope module ha1 $end
$var reg 1 q, a $end
$var reg 1 r, b $end
$var reg 1 s, sum $end
$var reg 1 t, cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 u, a $end
$var reg 1 v, b $end
$var reg 1 w, sum $end
$var reg 1 x, cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (14) $end
$scope module fa $end
$var reg 1 y, a $end
$var reg 1 z, b $end
$var reg 1 {, cin $end
$var reg 1 |, sum $end
$var reg 1 }, cout $end
$var reg 1 !- s1 $end
$var reg 1 "- c1 $end
$var reg 1 #- c2 $end
$scope module ha1 $end
$var reg 1 $- a $end
$var reg 1 %- b $end
$var reg 1 &- sum $end
$var reg 1 '- cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 (- a $end
$var reg 1 )- b $end
$var reg 1 *- sum $end
$var reg 1 +- cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (15) $end
$scope module fa $end
$var reg 1 ,- a $end
$var reg 1 -- b $end
$var reg 1 .- cin $end
$var reg 1 /- sum $end
$var reg 1 0- cout $end
$var reg 1 1- s1 $end
$var reg 1 2- c1 $end
$var reg 1 3- c2 $end
$scope module ha1 $end
$var reg 1 4- a $end
$var reg 1 5- b $end
$var reg 1 6- sum $end
$var reg 1 7- cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 8- a $end
$var reg 1 9- b $end
$var reg 1 :- sum $end
$var reg 1 ;- cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sum2 $end
$var reg 16 <- a[15:0] $end
$var reg 16 =- b[15:0] $end
$var reg 16 >- sum[15:0] $end
$var reg 1 ?- cout $end
$var reg 1 @- command $end
$var reg 16 A- cout_mid[15:0] $end
$var reg 16 B- c[15:0] $end
$var reg 1 C- cin $end
$scope module fa1 $end
$var reg 1 D- a $end
$var reg 1 E- b $end
$var reg 1 F- cin $end
$var reg 1 G- sum $end
$var reg 1 H- cout $end
$var reg 1 I- s1 $end
$var reg 1 J- c1 $end
$var reg 1 K- c2 $end
$scope module ha1 $end
$var reg 1 L- a $end
$var reg 1 M- b $end
$var reg 1 N- sum $end
$var reg 1 O- cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 P- a $end
$var reg 1 Q- b $end
$var reg 1 R- sum $end
$var reg 1 S- cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module fa $end
$var reg 1 T- a $end
$var reg 1 U- b $end
$var reg 1 V- cin $end
$var reg 1 W- sum $end
$var reg 1 X- cout $end
$var reg 1 Y- s1 $end
$var reg 1 Z- c1 $end
$var reg 1 [- c2 $end
$scope module ha1 $end
$var reg 1 \- a $end
$var reg 1 ]- b $end
$var reg 1 ^- sum $end
$var reg 1 _- cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 `- a $end
$var reg 1 a- b $end
$var reg 1 b- sum $end
$var reg 1 c- cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module fa $end
$var reg 1 d- a $end
$var reg 1 e- b $end
$var reg 1 f- cin $end
$var reg 1 g- sum $end
$var reg 1 h- cout $end
$var reg 1 i- s1 $end
$var reg 1 j- c1 $end
$var reg 1 k- c2 $end
$scope module ha1 $end
$var reg 1 l- a $end
$var reg 1 m- b $end
$var reg 1 n- sum $end
$var reg 1 o- cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 p- a $end
$var reg 1 q- b $end
$var reg 1 r- sum $end
$var reg 1 s- cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module fa $end
$var reg 1 t- a $end
$var reg 1 u- b $end
$var reg 1 v- cin $end
$var reg 1 w- sum $end
$var reg 1 x- cout $end
$var reg 1 y- s1 $end
$var reg 1 z- c1 $end
$var reg 1 {- c2 $end
$scope module ha1 $end
$var reg 1 |- a $end
$var reg 1 }- b $end
$var reg 1 !. sum $end
$var reg 1 ". cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 #. a $end
$var reg 1 $. b $end
$var reg 1 %. sum $end
$var reg 1 &. cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (4) $end
$scope module fa $end
$var reg 1 '. a $end
$var reg 1 (. b $end
$var reg 1 ). cin $end
$var reg 1 *. sum $end
$var reg 1 +. cout $end
$var reg 1 ,. s1 $end
$var reg 1 -. c1 $end
$var reg 1 .. c2 $end
$scope module ha1 $end
$var reg 1 /. a $end
$var reg 1 0. b $end
$var reg 1 1. sum $end
$var reg 1 2. cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 3. a $end
$var reg 1 4. b $end
$var reg 1 5. sum $end
$var reg 1 6. cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (5) $end
$scope module fa $end
$var reg 1 7. a $end
$var reg 1 8. b $end
$var reg 1 9. cin $end
$var reg 1 :. sum $end
$var reg 1 ;. cout $end
$var reg 1 <. s1 $end
$var reg 1 =. c1 $end
$var reg 1 >. c2 $end
$scope module ha1 $end
$var reg 1 ?. a $end
$var reg 1 @. b $end
$var reg 1 A. sum $end
$var reg 1 B. cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 C. a $end
$var reg 1 D. b $end
$var reg 1 E. sum $end
$var reg 1 F. cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (6) $end
$scope module fa $end
$var reg 1 G. a $end
$var reg 1 H. b $end
$var reg 1 I. cin $end
$var reg 1 J. sum $end
$var reg 1 K. cout $end
$var reg 1 L. s1 $end
$var reg 1 M. c1 $end
$var reg 1 N. c2 $end
$scope module ha1 $end
$var reg 1 O. a $end
$var reg 1 P. b $end
$var reg 1 Q. sum $end
$var reg 1 R. cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 S. a $end
$var reg 1 T. b $end
$var reg 1 U. sum $end
$var reg 1 V. cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (7) $end
$scope module fa $end
$var reg 1 W. a $end
$var reg 1 X. b $end
$var reg 1 Y. cin $end
$var reg 1 Z. sum $end
$var reg 1 [. cout $end
$var reg 1 \. s1 $end
$var reg 1 ]. c1 $end
$var reg 1 ^. c2 $end
$scope module ha1 $end
$var reg 1 _. a $end
$var reg 1 `. b $end
$var reg 1 a. sum $end
$var reg 1 b. cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 c. a $end
$var reg 1 d. b $end
$var reg 1 e. sum $end
$var reg 1 f. cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (8) $end
$scope module fa $end
$var reg 1 g. a $end
$var reg 1 h. b $end
$var reg 1 i. cin $end
$var reg 1 j. sum $end
$var reg 1 k. cout $end
$var reg 1 l. s1 $end
$var reg 1 m. c1 $end
$var reg 1 n. c2 $end
$scope module ha1 $end
$var reg 1 o. a $end
$var reg 1 p. b $end
$var reg 1 q. sum $end
$var reg 1 r. cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 s. a $end
$var reg 1 t. b $end
$var reg 1 u. sum $end
$var reg 1 v. cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (9) $end
$scope module fa $end
$var reg 1 w. a $end
$var reg 1 x. b $end
$var reg 1 y. cin $end
$var reg 1 z. sum $end
$var reg 1 {. cout $end
$var reg 1 |. s1 $end
$var reg 1 }. c1 $end
$var reg 1 !/ c2 $end
$scope module ha1 $end
$var reg 1 "/ a $end
$var reg 1 #/ b $end
$var reg 1 $/ sum $end
$var reg 1 %/ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 &/ a $end
$var reg 1 '/ b $end
$var reg 1 (/ sum $end
$var reg 1 )/ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (10) $end
$scope module fa $end
$var reg 1 */ a $end
$var reg 1 +/ b $end
$var reg 1 ,/ cin $end
$var reg 1 -/ sum $end
$var reg 1 ./ cout $end
$var reg 1 // s1 $end
$var reg 1 0/ c1 $end
$var reg 1 1/ c2 $end
$scope module ha1 $end
$var reg 1 2/ a $end
$var reg 1 3/ b $end
$var reg 1 4/ sum $end
$var reg 1 5/ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 6/ a $end
$var reg 1 7/ b $end
$var reg 1 8/ sum $end
$var reg 1 9/ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (11) $end
$scope module fa $end
$var reg 1 :/ a $end
$var reg 1 ;/ b $end
$var reg 1 </ cin $end
$var reg 1 =/ sum $end
$var reg 1 >/ cout $end
$var reg 1 ?/ s1 $end
$var reg 1 @/ c1 $end
$var reg 1 A/ c2 $end
$scope module ha1 $end
$var reg 1 B/ a $end
$var reg 1 C/ b $end
$var reg 1 D/ sum $end
$var reg 1 E/ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 F/ a $end
$var reg 1 G/ b $end
$var reg 1 H/ sum $end
$var reg 1 I/ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (12) $end
$scope module fa $end
$var reg 1 J/ a $end
$var reg 1 K/ b $end
$var reg 1 L/ cin $end
$var reg 1 M/ sum $end
$var reg 1 N/ cout $end
$var reg 1 O/ s1 $end
$var reg 1 P/ c1 $end
$var reg 1 Q/ c2 $end
$scope module ha1 $end
$var reg 1 R/ a $end
$var reg 1 S/ b $end
$var reg 1 T/ sum $end
$var reg 1 U/ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 V/ a $end
$var reg 1 W/ b $end
$var reg 1 X/ sum $end
$var reg 1 Y/ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (13) $end
$scope module fa $end
$var reg 1 Z/ a $end
$var reg 1 [/ b $end
$var reg 1 \/ cin $end
$var reg 1 ]/ sum $end
$var reg 1 ^/ cout $end
$var reg 1 _/ s1 $end
$var reg 1 `/ c1 $end
$var reg 1 a/ c2 $end
$scope module ha1 $end
$var reg 1 b/ a $end
$var reg 1 c/ b $end
$var reg 1 d/ sum $end
$var reg 1 e/ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 f/ a $end
$var reg 1 g/ b $end
$var reg 1 h/ sum $end
$var reg 1 i/ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (14) $end
$scope module fa $end
$var reg 1 j/ a $end
$var reg 1 k/ b $end
$var reg 1 l/ cin $end
$var reg 1 m/ sum $end
$var reg 1 n/ cout $end
$var reg 1 o/ s1 $end
$var reg 1 p/ c1 $end
$var reg 1 q/ c2 $end
$scope module ha1 $end
$var reg 1 r/ a $end
$var reg 1 s/ b $end
$var reg 1 t/ sum $end
$var reg 1 u/ cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 v/ a $end
$var reg 1 w/ b $end
$var reg 1 x/ sum $end
$var reg 1 y/ cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (15) $end
$scope module fa $end
$var reg 1 z/ a $end
$var reg 1 {/ b $end
$var reg 1 |/ cin $end
$var reg 1 }/ sum $end
$var reg 1 !0 cout $end
$var reg 1 "0 s1 $end
$var reg 1 #0 c1 $end
$var reg 1 $0 c2 $end
$scope module ha1 $end
$var reg 1 %0 a $end
$var reg 1 &0 b $end
$var reg 1 '0 sum $end
$var reg 1 (0 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 )0 a $end
$var reg 1 *0 b $end
$var reg 1 +0 sum $end
$var reg 1 ,0 cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sum3 $end
$var reg 16 -0 a[15:0] $end
$var reg 16 .0 b[15:0] $end
$var reg 16 /0 sum[15:0] $end
$var reg 1 00 cout $end
$var reg 1 10 command $end
$var reg 16 20 cout_mid[15:0] $end
$var reg 16 30 c[15:0] $end
$var reg 1 40 cin $end
$scope module fa1 $end
$var reg 1 50 a $end
$var reg 1 60 b $end
$var reg 1 70 cin $end
$var reg 1 80 sum $end
$var reg 1 90 cout $end
$var reg 1 :0 s1 $end
$var reg 1 ;0 c1 $end
$var reg 1 <0 c2 $end
$scope module ha1 $end
$var reg 1 =0 a $end
$var reg 1 >0 b $end
$var reg 1 ?0 sum $end
$var reg 1 @0 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 A0 a $end
$var reg 1 B0 b $end
$var reg 1 C0 sum $end
$var reg 1 D0 cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module fa $end
$var reg 1 E0 a $end
$var reg 1 F0 b $end
$var reg 1 G0 cin $end
$var reg 1 H0 sum $end
$var reg 1 I0 cout $end
$var reg 1 J0 s1 $end
$var reg 1 K0 c1 $end
$var reg 1 L0 c2 $end
$scope module ha1 $end
$var reg 1 M0 a $end
$var reg 1 N0 b $end
$var reg 1 O0 sum $end
$var reg 1 P0 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 Q0 a $end
$var reg 1 R0 b $end
$var reg 1 S0 sum $end
$var reg 1 T0 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module fa $end
$var reg 1 U0 a $end
$var reg 1 V0 b $end
$var reg 1 W0 cin $end
$var reg 1 X0 sum $end
$var reg 1 Y0 cout $end
$var reg 1 Z0 s1 $end
$var reg 1 [0 c1 $end
$var reg 1 \0 c2 $end
$scope module ha1 $end
$var reg 1 ]0 a $end
$var reg 1 ^0 b $end
$var reg 1 _0 sum $end
$var reg 1 `0 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 a0 a $end
$var reg 1 b0 b $end
$var reg 1 c0 sum $end
$var reg 1 d0 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module fa $end
$var reg 1 e0 a $end
$var reg 1 f0 b $end
$var reg 1 g0 cin $end
$var reg 1 h0 sum $end
$var reg 1 i0 cout $end
$var reg 1 j0 s1 $end
$var reg 1 k0 c1 $end
$var reg 1 l0 c2 $end
$scope module ha1 $end
$var reg 1 m0 a $end
$var reg 1 n0 b $end
$var reg 1 o0 sum $end
$var reg 1 p0 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 q0 a $end
$var reg 1 r0 b $end
$var reg 1 s0 sum $end
$var reg 1 t0 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (4) $end
$scope module fa $end
$var reg 1 u0 a $end
$var reg 1 v0 b $end
$var reg 1 w0 cin $end
$var reg 1 x0 sum $end
$var reg 1 y0 cout $end
$var reg 1 z0 s1 $end
$var reg 1 {0 c1 $end
$var reg 1 |0 c2 $end
$scope module ha1 $end
$var reg 1 }0 a $end
$var reg 1 !1 b $end
$var reg 1 "1 sum $end
$var reg 1 #1 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 $1 a $end
$var reg 1 %1 b $end
$var reg 1 &1 sum $end
$var reg 1 '1 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (5) $end
$scope module fa $end
$var reg 1 (1 a $end
$var reg 1 )1 b $end
$var reg 1 *1 cin $end
$var reg 1 +1 sum $end
$var reg 1 ,1 cout $end
$var reg 1 -1 s1 $end
$var reg 1 .1 c1 $end
$var reg 1 /1 c2 $end
$scope module ha1 $end
$var reg 1 01 a $end
$var reg 1 11 b $end
$var reg 1 21 sum $end
$var reg 1 31 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 41 a $end
$var reg 1 51 b $end
$var reg 1 61 sum $end
$var reg 1 71 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (6) $end
$scope module fa $end
$var reg 1 81 a $end
$var reg 1 91 b $end
$var reg 1 :1 cin $end
$var reg 1 ;1 sum $end
$var reg 1 <1 cout $end
$var reg 1 =1 s1 $end
$var reg 1 >1 c1 $end
$var reg 1 ?1 c2 $end
$scope module ha1 $end
$var reg 1 @1 a $end
$var reg 1 A1 b $end
$var reg 1 B1 sum $end
$var reg 1 C1 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 D1 a $end
$var reg 1 E1 b $end
$var reg 1 F1 sum $end
$var reg 1 G1 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (7) $end
$scope module fa $end
$var reg 1 H1 a $end
$var reg 1 I1 b $end
$var reg 1 J1 cin $end
$var reg 1 K1 sum $end
$var reg 1 L1 cout $end
$var reg 1 M1 s1 $end
$var reg 1 N1 c1 $end
$var reg 1 O1 c2 $end
$scope module ha1 $end
$var reg 1 P1 a $end
$var reg 1 Q1 b $end
$var reg 1 R1 sum $end
$var reg 1 S1 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 T1 a $end
$var reg 1 U1 b $end
$var reg 1 V1 sum $end
$var reg 1 W1 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (8) $end
$scope module fa $end
$var reg 1 X1 a $end
$var reg 1 Y1 b $end
$var reg 1 Z1 cin $end
$var reg 1 [1 sum $end
$var reg 1 \1 cout $end
$var reg 1 ]1 s1 $end
$var reg 1 ^1 c1 $end
$var reg 1 _1 c2 $end
$scope module ha1 $end
$var reg 1 `1 a $end
$var reg 1 a1 b $end
$var reg 1 b1 sum $end
$var reg 1 c1 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 d1 a $end
$var reg 1 e1 b $end
$var reg 1 f1 sum $end
$var reg 1 g1 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (9) $end
$scope module fa $end
$var reg 1 h1 a $end
$var reg 1 i1 b $end
$var reg 1 j1 cin $end
$var reg 1 k1 sum $end
$var reg 1 l1 cout $end
$var reg 1 m1 s1 $end
$var reg 1 n1 c1 $end
$var reg 1 o1 c2 $end
$scope module ha1 $end
$var reg 1 p1 a $end
$var reg 1 q1 b $end
$var reg 1 r1 sum $end
$var reg 1 s1 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 t1 a $end
$var reg 1 u1 b $end
$var reg 1 v1 sum $end
$var reg 1 w1 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (10) $end
$scope module fa $end
$var reg 1 x1 a $end
$var reg 1 y1 b $end
$var reg 1 z1 cin $end
$var reg 1 {1 sum $end
$var reg 1 |1 cout $end
$var reg 1 }1 s1 $end
$var reg 1 !2 c1 $end
$var reg 1 "2 c2 $end
$scope module ha1 $end
$var reg 1 #2 a $end
$var reg 1 $2 b $end
$var reg 1 %2 sum $end
$var reg 1 &2 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 '2 a $end
$var reg 1 (2 b $end
$var reg 1 )2 sum $end
$var reg 1 *2 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (11) $end
$scope module fa $end
$var reg 1 +2 a $end
$var reg 1 ,2 b $end
$var reg 1 -2 cin $end
$var reg 1 .2 sum $end
$var reg 1 /2 cout $end
$var reg 1 02 s1 $end
$var reg 1 12 c1 $end
$var reg 1 22 c2 $end
$scope module ha1 $end
$var reg 1 32 a $end
$var reg 1 42 b $end
$var reg 1 52 sum $end
$var reg 1 62 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 72 a $end
$var reg 1 82 b $end
$var reg 1 92 sum $end
$var reg 1 :2 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (12) $end
$scope module fa $end
$var reg 1 ;2 a $end
$var reg 1 <2 b $end
$var reg 1 =2 cin $end
$var reg 1 >2 sum $end
$var reg 1 ?2 cout $end
$var reg 1 @2 s1 $end
$var reg 1 A2 c1 $end
$var reg 1 B2 c2 $end
$scope module ha1 $end
$var reg 1 C2 a $end
$var reg 1 D2 b $end
$var reg 1 E2 sum $end
$var reg 1 F2 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 G2 a $end
$var reg 1 H2 b $end
$var reg 1 I2 sum $end
$var reg 1 J2 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (13) $end
$scope module fa $end
$var reg 1 K2 a $end
$var reg 1 L2 b $end
$var reg 1 M2 cin $end
$var reg 1 N2 sum $end
$var reg 1 O2 cout $end
$var reg 1 P2 s1 $end
$var reg 1 Q2 c1 $end
$var reg 1 R2 c2 $end
$scope module ha1 $end
$var reg 1 S2 a $end
$var reg 1 T2 b $end
$var reg 1 U2 sum $end
$var reg 1 V2 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 W2 a $end
$var reg 1 X2 b $end
$var reg 1 Y2 sum $end
$var reg 1 Z2 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (14) $end
$scope module fa $end
$var reg 1 [2 a $end
$var reg 1 \2 b $end
$var reg 1 ]2 cin $end
$var reg 1 ^2 sum $end
$var reg 1 _2 cout $end
$var reg 1 `2 s1 $end
$var reg 1 a2 c1 $end
$var reg 1 b2 c2 $end
$scope module ha1 $end
$var reg 1 c2 a $end
$var reg 1 d2 b $end
$var reg 1 e2 sum $end
$var reg 1 f2 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 g2 a $end
$var reg 1 h2 b $end
$var reg 1 i2 sum $end
$var reg 1 j2 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (15) $end
$scope module fa $end
$var reg 1 k2 a $end
$var reg 1 l2 b $end
$var reg 1 m2 cin $end
$var reg 1 n2 sum $end
$var reg 1 o2 cout $end
$var reg 1 p2 s1 $end
$var reg 1 q2 c1 $end
$var reg 1 r2 c2 $end
$scope module ha1 $end
$var reg 1 s2 a $end
$var reg 1 t2 b $end
$var reg 1 u2 sum $end
$var reg 1 v2 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 w2 a $end
$var reg 1 x2 b $end
$var reg 1 y2 sum $end
$var reg 1 z2 cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module full_add_er $end
$var reg 16 {2 a[15:0] $end
$var reg 16 |2 b[15:0] $end
$var reg 16 }2 sum[15:0] $end
$var reg 1 !3 cout $end
$var reg 1 "3 command $end
$var reg 16 #3 cout_mid[15:0] $end
$var reg 16 $3 c[15:0] $end
$var reg 1 %3 cin $end
$scope module fa1 $end
$var reg 1 &3 a $end
$var reg 1 '3 b $end
$var reg 1 (3 cin $end
$var reg 1 )3 sum $end
$var reg 1 *3 cout $end
$var reg 1 +3 s1 $end
$var reg 1 ,3 c1 $end
$var reg 1 -3 c2 $end
$scope module ha1 $end
$var reg 1 .3 a $end
$var reg 1 /3 b $end
$var reg 1 03 sum $end
$var reg 1 13 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 23 a $end
$var reg 1 33 b $end
$var reg 1 43 sum $end
$var reg 1 53 cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module fa $end
$var reg 1 63 a $end
$var reg 1 73 b $end
$var reg 1 83 cin $end
$var reg 1 93 sum $end
$var reg 1 :3 cout $end
$var reg 1 ;3 s1 $end
$var reg 1 <3 c1 $end
$var reg 1 =3 c2 $end
$scope module ha1 $end
$var reg 1 >3 a $end
$var reg 1 ?3 b $end
$var reg 1 @3 sum $end
$var reg 1 A3 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 B3 a $end
$var reg 1 C3 b $end
$var reg 1 D3 sum $end
$var reg 1 E3 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module fa $end
$var reg 1 F3 a $end
$var reg 1 G3 b $end
$var reg 1 H3 cin $end
$var reg 1 I3 sum $end
$var reg 1 J3 cout $end
$var reg 1 K3 s1 $end
$var reg 1 L3 c1 $end
$var reg 1 M3 c2 $end
$scope module ha1 $end
$var reg 1 N3 a $end
$var reg 1 O3 b $end
$var reg 1 P3 sum $end
$var reg 1 Q3 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 R3 a $end
$var reg 1 S3 b $end
$var reg 1 T3 sum $end
$var reg 1 U3 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module fa $end
$var reg 1 V3 a $end
$var reg 1 W3 b $end
$var reg 1 X3 cin $end
$var reg 1 Y3 sum $end
$var reg 1 Z3 cout $end
$var reg 1 [3 s1 $end
$var reg 1 \3 c1 $end
$var reg 1 ]3 c2 $end
$scope module ha1 $end
$var reg 1 ^3 a $end
$var reg 1 _3 b $end
$var reg 1 `3 sum $end
$var reg 1 a3 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 b3 a $end
$var reg 1 c3 b $end
$var reg 1 d3 sum $end
$var reg 1 e3 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (4) $end
$scope module fa $end
$var reg 1 f3 a $end
$var reg 1 g3 b $end
$var reg 1 h3 cin $end
$var reg 1 i3 sum $end
$var reg 1 j3 cout $end
$var reg 1 k3 s1 $end
$var reg 1 l3 c1 $end
$var reg 1 m3 c2 $end
$scope module ha1 $end
$var reg 1 n3 a $end
$var reg 1 o3 b $end
$var reg 1 p3 sum $end
$var reg 1 q3 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 r3 a $end
$var reg 1 s3 b $end
$var reg 1 t3 sum $end
$var reg 1 u3 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (5) $end
$scope module fa $end
$var reg 1 v3 a $end
$var reg 1 w3 b $end
$var reg 1 x3 cin $end
$var reg 1 y3 sum $end
$var reg 1 z3 cout $end
$var reg 1 {3 s1 $end
$var reg 1 |3 c1 $end
$var reg 1 }3 c2 $end
$scope module ha1 $end
$var reg 1 !4 a $end
$var reg 1 "4 b $end
$var reg 1 #4 sum $end
$var reg 1 $4 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 %4 a $end
$var reg 1 &4 b $end
$var reg 1 '4 sum $end
$var reg 1 (4 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (6) $end
$scope module fa $end
$var reg 1 )4 a $end
$var reg 1 *4 b $end
$var reg 1 +4 cin $end
$var reg 1 ,4 sum $end
$var reg 1 -4 cout $end
$var reg 1 .4 s1 $end
$var reg 1 /4 c1 $end
$var reg 1 04 c2 $end
$scope module ha1 $end
$var reg 1 14 a $end
$var reg 1 24 b $end
$var reg 1 34 sum $end
$var reg 1 44 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 54 a $end
$var reg 1 64 b $end
$var reg 1 74 sum $end
$var reg 1 84 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (7) $end
$scope module fa $end
$var reg 1 94 a $end
$var reg 1 :4 b $end
$var reg 1 ;4 cin $end
$var reg 1 <4 sum $end
$var reg 1 =4 cout $end
$var reg 1 >4 s1 $end
$var reg 1 ?4 c1 $end
$var reg 1 @4 c2 $end
$scope module ha1 $end
$var reg 1 A4 a $end
$var reg 1 B4 b $end
$var reg 1 C4 sum $end
$var reg 1 D4 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 E4 a $end
$var reg 1 F4 b $end
$var reg 1 G4 sum $end
$var reg 1 H4 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (8) $end
$scope module fa $end
$var reg 1 I4 a $end
$var reg 1 J4 b $end
$var reg 1 K4 cin $end
$var reg 1 L4 sum $end
$var reg 1 M4 cout $end
$var reg 1 N4 s1 $end
$var reg 1 O4 c1 $end
$var reg 1 P4 c2 $end
$scope module ha1 $end
$var reg 1 Q4 a $end
$var reg 1 R4 b $end
$var reg 1 S4 sum $end
$var reg 1 T4 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 U4 a $end
$var reg 1 V4 b $end
$var reg 1 W4 sum $end
$var reg 1 X4 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (9) $end
$scope module fa $end
$var reg 1 Y4 a $end
$var reg 1 Z4 b $end
$var reg 1 [4 cin $end
$var reg 1 \4 sum $end
$var reg 1 ]4 cout $end
$var reg 1 ^4 s1 $end
$var reg 1 _4 c1 $end
$var reg 1 `4 c2 $end
$scope module ha1 $end
$var reg 1 a4 a $end
$var reg 1 b4 b $end
$var reg 1 c4 sum $end
$var reg 1 d4 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 e4 a $end
$var reg 1 f4 b $end
$var reg 1 g4 sum $end
$var reg 1 h4 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (10) $end
$scope module fa $end
$var reg 1 i4 a $end
$var reg 1 j4 b $end
$var reg 1 k4 cin $end
$var reg 1 l4 sum $end
$var reg 1 m4 cout $end
$var reg 1 n4 s1 $end
$var reg 1 o4 c1 $end
$var reg 1 p4 c2 $end
$scope module ha1 $end
$var reg 1 q4 a $end
$var reg 1 r4 b $end
$var reg 1 s4 sum $end
$var reg 1 t4 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 u4 a $end
$var reg 1 v4 b $end
$var reg 1 w4 sum $end
$var reg 1 x4 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (11) $end
$scope module fa $end
$var reg 1 y4 a $end
$var reg 1 z4 b $end
$var reg 1 {4 cin $end
$var reg 1 |4 sum $end
$var reg 1 }4 cout $end
$var reg 1 !5 s1 $end
$var reg 1 "5 c1 $end
$var reg 1 #5 c2 $end
$scope module ha1 $end
$var reg 1 $5 a $end
$var reg 1 %5 b $end
$var reg 1 &5 sum $end
$var reg 1 '5 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 (5 a $end
$var reg 1 )5 b $end
$var reg 1 *5 sum $end
$var reg 1 +5 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (12) $end
$scope module fa $end
$var reg 1 ,5 a $end
$var reg 1 -5 b $end
$var reg 1 .5 cin $end
$var reg 1 /5 sum $end
$var reg 1 05 cout $end
$var reg 1 15 s1 $end
$var reg 1 25 c1 $end
$var reg 1 35 c2 $end
$scope module ha1 $end
$var reg 1 45 a $end
$var reg 1 55 b $end
$var reg 1 65 sum $end
$var reg 1 75 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 85 a $end
$var reg 1 95 b $end
$var reg 1 :5 sum $end
$var reg 1 ;5 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (13) $end
$scope module fa $end
$var reg 1 <5 a $end
$var reg 1 =5 b $end
$var reg 1 >5 cin $end
$var reg 1 ?5 sum $end
$var reg 1 @5 cout $end
$var reg 1 A5 s1 $end
$var reg 1 B5 c1 $end
$var reg 1 C5 c2 $end
$scope module ha1 $end
$var reg 1 D5 a $end
$var reg 1 E5 b $end
$var reg 1 F5 sum $end
$var reg 1 G5 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 H5 a $end
$var reg 1 I5 b $end
$var reg 1 J5 sum $end
$var reg 1 K5 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (14) $end
$scope module fa $end
$var reg 1 L5 a $end
$var reg 1 M5 b $end
$var reg 1 N5 cin $end
$var reg 1 O5 sum $end
$var reg 1 P5 cout $end
$var reg 1 Q5 s1 $end
$var reg 1 R5 c1 $end
$var reg 1 S5 c2 $end
$scope module ha1 $end
$var reg 1 T5 a $end
$var reg 1 U5 b $end
$var reg 1 V5 sum $end
$var reg 1 W5 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 X5 a $end
$var reg 1 Y5 b $end
$var reg 1 Z5 sum $end
$var reg 1 [5 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (15) $end
$scope module fa $end
$var reg 1 \5 a $end
$var reg 1 ]5 b $end
$var reg 1 ^5 cin $end
$var reg 1 _5 sum $end
$var reg 1 `5 cout $end
$var reg 1 a5 s1 $end
$var reg 1 b5 c1 $end
$var reg 1 c5 c2 $end
$scope module ha1 $end
$var reg 1 d5 a $end
$var reg 1 e5 b $end
$var reg 1 f5 sum $end
$var reg 1 g5 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 h5 a $end
$var reg 1 i5 b $end
$var reg 1 j5 sum $end
$var reg 1 k5 cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module full_sub_er $end
$var reg 16 l5 a[15:0] $end
$var reg 16 m5 b[15:0] $end
$var reg 16 n5 sum[15:0] $end
$var reg 1 o5 cout $end
$var reg 1 p5 command $end
$var reg 16 q5 cout_mid[15:0] $end
$var reg 16 r5 c[15:0] $end
$var reg 1 s5 cin $end
$scope module fa1 $end
$var reg 1 t5 a $end
$var reg 1 u5 b $end
$var reg 1 v5 cin $end
$var reg 1 w5 sum $end
$var reg 1 x5 cout $end
$var reg 1 y5 s1 $end
$var reg 1 z5 c1 $end
$var reg 1 {5 c2 $end
$scope module ha1 $end
$var reg 1 |5 a $end
$var reg 1 }5 b $end
$var reg 1 !6 sum $end
$var reg 1 "6 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 #6 a $end
$var reg 1 $6 b $end
$var reg 1 %6 sum $end
$var reg 1 &6 cout $end
$upscope $end
$upscope $end
$scope module (1) $end
$scope module fa $end
$var reg 1 '6 a $end
$var reg 1 (6 b $end
$var reg 1 )6 cin $end
$var reg 1 *6 sum $end
$var reg 1 +6 cout $end
$var reg 1 ,6 s1 $end
$var reg 1 -6 c1 $end
$var reg 1 .6 c2 $end
$scope module ha1 $end
$var reg 1 /6 a $end
$var reg 1 06 b $end
$var reg 1 16 sum $end
$var reg 1 26 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 36 a $end
$var reg 1 46 b $end
$var reg 1 56 sum $end
$var reg 1 66 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (2) $end
$scope module fa $end
$var reg 1 76 a $end
$var reg 1 86 b $end
$var reg 1 96 cin $end
$var reg 1 :6 sum $end
$var reg 1 ;6 cout $end
$var reg 1 <6 s1 $end
$var reg 1 =6 c1 $end
$var reg 1 >6 c2 $end
$scope module ha1 $end
$var reg 1 ?6 a $end
$var reg 1 @6 b $end
$var reg 1 A6 sum $end
$var reg 1 B6 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 C6 a $end
$var reg 1 D6 b $end
$var reg 1 E6 sum $end
$var reg 1 F6 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (3) $end
$scope module fa $end
$var reg 1 G6 a $end
$var reg 1 H6 b $end
$var reg 1 I6 cin $end
$var reg 1 J6 sum $end
$var reg 1 K6 cout $end
$var reg 1 L6 s1 $end
$var reg 1 M6 c1 $end
$var reg 1 N6 c2 $end
$scope module ha1 $end
$var reg 1 O6 a $end
$var reg 1 P6 b $end
$var reg 1 Q6 sum $end
$var reg 1 R6 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 S6 a $end
$var reg 1 T6 b $end
$var reg 1 U6 sum $end
$var reg 1 V6 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (4) $end
$scope module fa $end
$var reg 1 W6 a $end
$var reg 1 X6 b $end
$var reg 1 Y6 cin $end
$var reg 1 Z6 sum $end
$var reg 1 [6 cout $end
$var reg 1 \6 s1 $end
$var reg 1 ]6 c1 $end
$var reg 1 ^6 c2 $end
$scope module ha1 $end
$var reg 1 _6 a $end
$var reg 1 `6 b $end
$var reg 1 a6 sum $end
$var reg 1 b6 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 c6 a $end
$var reg 1 d6 b $end
$var reg 1 e6 sum $end
$var reg 1 f6 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (5) $end
$scope module fa $end
$var reg 1 g6 a $end
$var reg 1 h6 b $end
$var reg 1 i6 cin $end
$var reg 1 j6 sum $end
$var reg 1 k6 cout $end
$var reg 1 l6 s1 $end
$var reg 1 m6 c1 $end
$var reg 1 n6 c2 $end
$scope module ha1 $end
$var reg 1 o6 a $end
$var reg 1 p6 b $end
$var reg 1 q6 sum $end
$var reg 1 r6 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 s6 a $end
$var reg 1 t6 b $end
$var reg 1 u6 sum $end
$var reg 1 v6 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (6) $end
$scope module fa $end
$var reg 1 w6 a $end
$var reg 1 x6 b $end
$var reg 1 y6 cin $end
$var reg 1 z6 sum $end
$var reg 1 {6 cout $end
$var reg 1 |6 s1 $end
$var reg 1 }6 c1 $end
$var reg 1 !7 c2 $end
$scope module ha1 $end
$var reg 1 "7 a $end
$var reg 1 #7 b $end
$var reg 1 $7 sum $end
$var reg 1 %7 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 &7 a $end
$var reg 1 '7 b $end
$var reg 1 (7 sum $end
$var reg 1 )7 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (7) $end
$scope module fa $end
$var reg 1 *7 a $end
$var reg 1 +7 b $end
$var reg 1 ,7 cin $end
$var reg 1 -7 sum $end
$var reg 1 .7 cout $end
$var reg 1 /7 s1 $end
$var reg 1 07 c1 $end
$var reg 1 17 c2 $end
$scope module ha1 $end
$var reg 1 27 a $end
$var reg 1 37 b $end
$var reg 1 47 sum $end
$var reg 1 57 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 67 a $end
$var reg 1 77 b $end
$var reg 1 87 sum $end
$var reg 1 97 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (8) $end
$scope module fa $end
$var reg 1 :7 a $end
$var reg 1 ;7 b $end
$var reg 1 <7 cin $end
$var reg 1 =7 sum $end
$var reg 1 >7 cout $end
$var reg 1 ?7 s1 $end
$var reg 1 @7 c1 $end
$var reg 1 A7 c2 $end
$scope module ha1 $end
$var reg 1 B7 a $end
$var reg 1 C7 b $end
$var reg 1 D7 sum $end
$var reg 1 E7 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 F7 a $end
$var reg 1 G7 b $end
$var reg 1 H7 sum $end
$var reg 1 I7 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (9) $end
$scope module fa $end
$var reg 1 J7 a $end
$var reg 1 K7 b $end
$var reg 1 L7 cin $end
$var reg 1 M7 sum $end
$var reg 1 N7 cout $end
$var reg 1 O7 s1 $end
$var reg 1 P7 c1 $end
$var reg 1 Q7 c2 $end
$scope module ha1 $end
$var reg 1 R7 a $end
$var reg 1 S7 b $end
$var reg 1 T7 sum $end
$var reg 1 U7 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 V7 a $end
$var reg 1 W7 b $end
$var reg 1 X7 sum $end
$var reg 1 Y7 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (10) $end
$scope module fa $end
$var reg 1 Z7 a $end
$var reg 1 [7 b $end
$var reg 1 \7 cin $end
$var reg 1 ]7 sum $end
$var reg 1 ^7 cout $end
$var reg 1 _7 s1 $end
$var reg 1 `7 c1 $end
$var reg 1 a7 c2 $end
$scope module ha1 $end
$var reg 1 b7 a $end
$var reg 1 c7 b $end
$var reg 1 d7 sum $end
$var reg 1 e7 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 f7 a $end
$var reg 1 g7 b $end
$var reg 1 h7 sum $end
$var reg 1 i7 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (11) $end
$scope module fa $end
$var reg 1 j7 a $end
$var reg 1 k7 b $end
$var reg 1 l7 cin $end
$var reg 1 m7 sum $end
$var reg 1 n7 cout $end
$var reg 1 o7 s1 $end
$var reg 1 p7 c1 $end
$var reg 1 q7 c2 $end
$scope module ha1 $end
$var reg 1 r7 a $end
$var reg 1 s7 b $end
$var reg 1 t7 sum $end
$var reg 1 u7 cout $end
$upscope $end
$scope module ha2 $end
$var reg 1 v7 a $end
$var reg 1 w7 b $end
$var reg 1 x7 sum $end
$var reg 1 y7 cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module (12) $end
$scope module fa $end
$var reg 1 z7 a $end
$var reg 1 {7 b $end
$var reg 1 |7 cin $end
$var reg 1 }7 sum $end
$var reg 1 !8 cout $end
$var reg 1 "8 s1 $end
$var reg 1 #8 c1 $end
$var reg 1 $8 c2 $end
$scope module ha1 $end
$var reg 1 %8 a $end
$var reg 1 &8 b $end
$var reg 1 '8 sum $end
$var reg 1 (8 cout $end
$u